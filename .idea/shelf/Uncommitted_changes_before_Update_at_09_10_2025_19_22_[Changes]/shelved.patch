Index: app/src/main/java/com/tutorly/navigation/AppNav.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tutorly.navigation\r\n\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.systemBars\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.NavType\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport androidx.navigation.navArgument\r\nimport com.tutorly.ui.CalendarScreen\r\nimport com.tutorly.ui.components.AppBottomBar\r\nimport com.tutorly.ui.components.AppTopBar\r\nimport com.tutorly.ui.screens.*\r\n\r\n\r\nconst val ROUTE_CALENDAR = \"calendar\"\r\nconst val ROUTE_TODAY = \"today\"\r\nconst val ROUTE_STUDENTS = \"students\"\r\nconst val ROUTE_FINANCE = \"finance\"\r\nconst val ROUTE_STUDENT_NEW = \"student/new\"\r\nconst val ROUTE_STUDENT_DETAILS = \"student/{studentId}\"\r\nconst val ROUTE_STUDENT_EDIT = \"student/{studentId}/edit\"\r\nconst val ROUTE_LESSON_NEW = \"lesson/new?studentId={studentId}\" // под автоподстановку\r\n\r\nprivate fun studentDetailsRoute(studentId: Long) = ROUTE_STUDENT_DETAILS.replace(\"{studentId}\", studentId.toString())\r\nprivate fun studentEditRoute(studentId: Long) = ROUTE_STUDENT_EDIT.replace(\"{studentId}\", studentId.toString())\r\n\r\nprivate fun studentDetailsRoute(studentId: Long) = ROUTE_STUDENT_DETAILS.replace(\"{studentId}\", studentId.toString())\r\nprivate fun studentEditRoute(studentId: Long) = ROUTE_STUDENT_EDIT.replace(\"{studentId}\", studentId.toString())\r\n\r\n@Composable\r\nfun AppNavRoot() {\r\n    val nav = rememberNavController()\r\n    val backStack by nav.currentBackStackEntryAsState()\r\n    val route = backStack?.destination?.route ?: ROUTE_CALENDAR\r\n\r\n    // какой топбар показывать\r\n    val showGlobalTopBar = when (route) {\r\n        ROUTE_STUDENTS, ROUTE_FINANCE -> true   // тут простой заголовок уместен\r\n        else -> false                   // calendar/today рисуют верх сами\r\n    }\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            if (showGlobalTopBar) {\r\n                AppTopBar(\r\n                    title = when (route) {\r\n                        ROUTE_STUDENTS -> \"Ученики\"\r\n                        ROUTE_FINANCE -> \"Финансы\"\r\n                        else -> \"\"\r\n                    },\r\n                    onAddClick = when (route) {\r\n                        ROUTE_STUDENTS -> ({\r\n                            nav.navigate(ROUTE_STUDENT_NEW) {\r\n                                launchSingleTop = true\r\n                            }\r\n                        })\r\n                        else -> null\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        bottomBar = {\r\n            AppBottomBar(\r\n                currentRoute = route,\r\n                onSelect = { dest ->\r\n                    nav.navigate(dest) {\r\n                        launchSingleTop = true\r\n                        restoreState = true\r\n                        popUpTo(nav.graph.startDestinationId) { saveState = true }\r\n                    }\r\n                }\r\n            )\r\n        },\r\n        // чтобы контент корректно учитывал статус/навигационные панели\r\n        contentWindowInsets = WindowInsets.systemBars\r\n    ) { innerPadding ->\r\n        NavHost(\r\n            navController = nav,\r\n            startDestination = ROUTE_CALENDAR,\r\n            modifier = Modifier.padding(innerPadding)\r\n        ) {\r\n            composable(ROUTE_CALENDAR) { CalendarScreen() }   // сам рисует свой верх (месяц/табы/лента)\r\n            composable(ROUTE_TODAY)    { TodayScreen() }      // сам рисует свой верх (заголовок + счетчики)\r\n            composable(ROUTE_STUDENTS) {\r\n                StudentsScreen(\r\n                    onStudentClick = { id ->\r\n                        nav.navigate(studentDetailsRoute(id)) {\r\n                            launchSingleTop = true\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n            composable(ROUTE_STUDENT_NEW) {\r\n                StudentEditorScreen(\r\n                    onClose = { nav.popBackStack() },\r\n                    onSaved = { newId ->\r\n                        nav.popBackStack()\r\n                        nav.navigate(studentDetailsRoute(newId)) {\r\n                            launchSingleTop = true\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n            composable(\r\n                route = ROUTE_STUDENT_DETAILS,\r\n                arguments = listOf(navArgument(\"studentId\") { type = NavType.LongType })\r\n            ) { entry ->\r\n                val studentId = entry.arguments?.getLong(\"studentId\") ?: return@composable\r\n                StudentDetailsScreen(\r\n                    onBack = { nav.popBackStack() },\r\n                    onEdit = {\r\n                        nav.navigate(studentEditRoute(studentId)) {\r\n                            launchSingleTop = true\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n            composable(\r\n                route = ROUTE_STUDENT_EDIT,\r\n                arguments = listOf(navArgument(\"studentId\") { type = NavType.LongType })\r\n            ) {\r\n                StudentEditorScreen(\r\n                    onClose = { nav.popBackStack() },\r\n                    onSaved = {\r\n                        nav.popBackStack()\r\n                    }\r\n                )\r\n            }\r\n            composable(ROUTE_FINANCE)  { FinanceScreen() }\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tutorly/navigation/AppNav.kt b/app/src/main/java/com/tutorly/navigation/AppNav.kt
--- a/app/src/main/java/com/tutorly/navigation/AppNav.kt	(revision 0122e5efc932dce06cfc92d8f7d929cad3a80594)
+++ b/app/src/main/java/com/tutorly/navigation/AppNav.kt	(date 1760020050791)
@@ -31,9 +31,6 @@
 private fun studentDetailsRoute(studentId: Long) = ROUTE_STUDENT_DETAILS.replace("{studentId}", studentId.toString())
 private fun studentEditRoute(studentId: Long) = ROUTE_STUDENT_EDIT.replace("{studentId}", studentId.toString())
 
-private fun studentDetailsRoute(studentId: Long) = ROUTE_STUDENT_DETAILS.replace("{studentId}", studentId.toString())
-private fun studentEditRoute(studentId: Long) = ROUTE_STUDENT_EDIT.replace("{studentId}", studentId.toString())
-
 @Composable
 fun AppNavRoot() {
     val nav = rememberNavController()
