Index: app/src/main/java/com/tutorly/ui/components/TopBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tutorly.ui.components\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.RowScope\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.statusBarsPadding\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Add\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.FilledTonalIconButton\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButtonDefaults\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.TopAppBarDefaults\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.Brush\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport com.tutorly.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun AppTopBar(\r\n    title: String,\r\n    onAddClick: (() -> Unit)? = null,\r\n    actions: @Composable RowScope.() -> Unit = {},\r\n    navigationIcon: (@Composable () -> Unit)? = null\r\n) {\r\n    TopBarContainer {\r\n        TopAppBar(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .height(80.dp),\r\n            title = {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    Text(\r\n                        text = title,\r\n                        maxLines = 1,\r\n                        overflow = TextOverflow.Ellipsis,\r\n                        textAlign = TextAlign.Center,\r\n                        color = MaterialTheme.colorScheme.onSurface\r\n                    )\r\n                }\r\n            },\r\n            navigationIcon = {\r\n                navigationIcon?.invoke()\r\n            },\r\n            actions = {\r\n                actions()\r\n                onAddClick?.let {\r\n                    FilledTonalIconButton(\r\n                        onClick = it,\r\n                        colors = IconButtonDefaults.filledTonalIconButtonColors(\r\n                            containerColor = MaterialTheme.colorScheme.primary,\r\n                            contentColor = MaterialTheme.colorScheme.onPrimary\r\n                        )\r\n                    ) {\r\n                        Icon(\r\n                            Icons.Default.Add,\r\n                            contentDescription = stringResource(id = R.string.add_student)\r\n                        )\r\n                    }\r\n                }\r\n            },\r\n            colors = TopAppBarDefaults.topAppBarColors(\r\n                containerColor = Color.Transparent,\r\n                scrolledContainerColor = Color.Transparent,\r\n                titleContentColor = MaterialTheme.colorScheme.onSurface,\r\n                actionIconContentColor = MaterialTheme.colorScheme.onSurface,\r\n                navigationIconContentColor = MaterialTheme.colorScheme.onSurface\r\n            ),\r\n            windowInsets = WindowInsets(0, 0, 0, 0)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun TopBarContainer(content: @Composable () -> Unit) {\r\n    val extendedColors = MaterialTheme.extendedColors\r\n\r\n    Surface(\r\n        modifier = Modifier.fillMaxWidth(),\r\n        color = Color.Transparent,\r\n        shadowElevation = 4.dp,\r\n        tonalElevation = 0.dp\r\n    ) {\r\n        Box(\r\n            modifier = Modifier.background(\r\n                Brush.horizontalGradient(\r\n                    colors = listOf(extendedColors.topBarStart, extendedColors.topBarEnd)\r\n                )\r\n            )\r\n        ) {\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .statusBarsPadding()\r\n            ) {\r\n                content()\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tutorly/ui/components/TopBar.kt b/app/src/main/java/com/tutorly/ui/components/TopBar.kt
--- a/app/src/main/java/com/tutorly/ui/components/TopBar.kt	(revision 8dd76f3244e6bb613bd73d40747e1390be4af717)
+++ b/app/src/main/java/com/tutorly/ui/components/TopBar.kt	(date 1761563363619)
@@ -30,6 +30,7 @@
 import androidx.compose.ui.text.style.TextOverflow
 import androidx.compose.ui.unit.dp
 import com.tutorly.R
+import com.tutorly.ui.theme.extendedColors
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
